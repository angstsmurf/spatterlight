{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 Helvetica-Bold;\f2\fnil\fcharset0 SourceCodePro-Regular;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;\red255\green0\blue0;
\red255\green25\blue0;\red255\green41\blue0;\red255\green58\blue0;\red255\green74\blue0;\red255\green99\blue0;
\red255\green115\blue0;\red255\green140\blue0;\red255\green156\blue0;\red255\green173\blue0;\red255\green189\blue0;
\red255\green214\blue0;\red255\green230\blue0;\red255\green247\blue0;\red239\green255\blue0;\red222\green255\blue0;
\red206\green255\blue0;\red181\green255\blue0;\red165\green255\blue0;\red148\green255\blue0;\red123\green255\blue0;
\red107\green255\blue0;\red90\green255\blue0;\red66\green255\blue0;\red49\green255\blue0;\red33\green255\blue0;
\red8\green255\blue0;\red0\green255\blue8;\red0\green255\blue25;\red0\green255\blue49;\red0\green255\blue66;
\red0\green255\blue82;\red0\green255\blue99;\red0\green255\blue123;\red0\green255\blue140;\red0\green255\blue165;
\red0\green255\blue181;\red0\green255\blue197;\red0\green255\blue214;\red0\green255\blue239;\red0\green255\blue255;
\red0\green230\blue255;\red0\green214\blue255;\red0\green197\blue255;\red0\green181\blue255;\red0\green156\blue255;
\red0\green140\blue255;\red0\green115\blue255;\red0\green99\blue255;\red0\green82\blue255;\red0\green66\blue255;
\red0\green41\blue255;\red0\green25\blue255;\red0\green0\blue255;\red8\green0\blue255;\red33\green0\blue255;
\red49\green0\blue255;\red74\green0\blue255;\red90\green0\blue255;\red107\green0\blue255;\red123\green0\blue255;
\red148\green0\blue255;\red165\green0\blue255;\red189\green0\blue255;\red206\green0\blue255;\red222\green0\blue255;
\red239\green0\blue255;\red255\green0\blue247;\red255\green0\blue230;\red255\green0\blue206;\red255\green0\blue189;
\red255\green0\blue173;\red255\green0\blue156;\red255\green0\blue132;\red255\green0\blue115;\red255\green0\blue90;
\red255\green0\blue74;\red255\green0\blue58;\red255\green0\blue41;\red255\green0\blue16;\red0\green0\blue0;
\red239\green0\blue0;\red0\green214\blue0;\red239\green239\blue0;\red0\green107\blue181;\red255\green0\blue255;
\red0\green239\blue239;\red255\green255\blue255;\red181\green181\blue181;\red140\green140\blue140;\red90\green90\blue90;
}
{\*\expandedcolortbl;;\csgray\c0;\csgray\c100000;\csgenericrgb\c100000\c0\c0;
\csgenericrgb\c100000\c9804\c0;\csgenericrgb\c100000\c16078\c0;\csgenericrgb\c100000\c22745\c0;\csgenericrgb\c100000\c29020\c0;\csgenericrgb\c100000\c38824\c0;
\csgenericrgb\c100000\c45098\c0;\csgenericrgb\c100000\c54902\c0;\csgenericrgb\c100000\c61176\c0;\csgenericrgb\c100000\c67843\c0;\csgenericrgb\c100000\c74118\c0;
\csgenericrgb\c100000\c83922\c0;\csgenericrgb\c100000\c90196\c0;\csgenericrgb\c100000\c96863\c0;\csgenericrgb\c93725\c100000\c0;\csgenericrgb\c87059\c100000\c0;
\csgenericrgb\c80784\c100000\c0;\csgenericrgb\c70980\c100000\c0;\csgenericrgb\c64706\c100000\c0;\csgenericrgb\c58039\c100000\c0;\csgenericrgb\c48235\c100000\c0;
\csgenericrgb\c41961\c100000\c0;\csgenericrgb\c35294\c100000\c0;\csgenericrgb\c25882\c100000\c0;\csgenericrgb\c19216\c100000\c0;\csgenericrgb\c12941\c100000\c0;
\csgenericrgb\c3137\c100000\c0;\csgenericrgb\c0\c100000\c3137;\csgenericrgb\c0\c100000\c9804;\csgenericrgb\c0\c100000\c19216;\csgenericrgb\c0\c100000\c25882;
\csgenericrgb\c0\c100000\c32157;\csgenericrgb\c0\c100000\c38824;\csgenericrgb\c0\c100000\c48235;\csgenericrgb\c0\c100000\c54902;\csgenericrgb\c0\c100000\c64706;
\csgenericrgb\c0\c100000\c70980;\csgenericrgb\c0\c100000\c77255;\csgenericrgb\c0\c100000\c83922;\csgenericrgb\c0\c100000\c93725;\csgenericrgb\c0\c100000\c100000;
\csgenericrgb\c0\c90196\c100000;\csgenericrgb\c0\c83922\c100000;\csgenericrgb\c0\c77255\c100000;\csgenericrgb\c0\c70980\c100000;\csgenericrgb\c0\c61176\c100000;
\csgenericrgb\c0\c54902\c100000;\csgenericrgb\c0\c45098\c100000;\csgenericrgb\c0\c38824\c100000;\csgenericrgb\c0\c32157\c100000;\csgenericrgb\c0\c25882\c100000;
\csgenericrgb\c0\c16078\c100000;\csgenericrgb\c0\c9804\c100000;\csgenericrgb\c0\c0\c100000;\csgenericrgb\c3137\c0\c100000;\csgenericrgb\c12941\c0\c100000;
\csgenericrgb\c19216\c0\c100000;\csgenericrgb\c29020\c0\c100000;\csgenericrgb\c35294\c0\c100000;\csgenericrgb\c41961\c0\c100000;\csgenericrgb\c48235\c0\c100000;
\csgenericrgb\c58039\c0\c100000;\csgenericrgb\c64706\c0\c100000;\csgenericrgb\c74118\c0\c100000;\csgenericrgb\c80784\c0\c100000;\csgenericrgb\c87059\c0\c100000;
\csgenericrgb\c93725\c0\c100000;\csgenericrgb\c100000\c0\c96863;\csgenericrgb\c100000\c0\c90196;\csgenericrgb\c100000\c0\c80784;\csgenericrgb\c100000\c0\c74118;
\csgenericrgb\c100000\c0\c67843;\csgenericrgb\c100000\c0\c61176;\csgenericrgb\c100000\c0\c51765;\csgenericrgb\c100000\c0\c45098;\csgenericrgb\c100000\c0\c35294;
\csgenericrgb\c100000\c0\c29020;\csgenericrgb\c100000\c0\c22745;\csgenericrgb\c100000\c0\c16078;\csgenericrgb\c100000\c0\c6275;\csgenericrgb\c0\c0\c0;
\csgenericrgb\c93725\c0\c0;\csgenericrgb\c0\c83922\c0;\csgenericrgb\c93725\c93725\c0;\csgenericrgb\c0\c41961\c70980;\csgenericrgb\c100000\c0\c100000;
\csgenericrgb\c0\c93725\c93725;\csgenericrgb\c100000\c100000\c100000;\csgenericrgb\c70980\c70980\c70980;\csgenericrgb\c54902\c54902\c54902;\csgenericrgb\c35294\c35294\c35294;
}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\slleading20\pardirnatural\partightenfactor0

\f0\fs26 \cf2 \cb3 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\slleading20\pardirnatural\partightenfactor0

\f1\b Praxix
\f0\b0 : A Z-code interpreter unit test\
Release 1 / Serial number 180329 / Inform v6.31, compiler options S\
\
A voice booooms out: Welcome to the test chamber.\
\
Type \'93help\'94 to repeat this message, \'93quit\'94 to exit, \'93all\'94 to run all tests, or one of the following test options: \'93operand\'94, \'93arith\'94, \'93comarith\'94, \'93bitwise\'94, \'93shift\'94, \'93inc\'94, \'93incchk\'94, \'93array\'94, \'93undo\'94, \'93multiundo\'94, \'93indirect\'94, \'93streamtrip\'94, \'93streamop\'94, \'93throwcatch\'94, \'93tables\'94, \'93specfixes\'94, \'93spec11\'94, \'93spec12\'94.\
(Some tests check unspecified behaviour, and their results will be marked by (Unspecified).)\
\
\
>
\f1\b \cf2 all\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\slleading20\pardirnatural\partightenfactor0

\f0\b0 \cf2 All tests:\
\
Basic operand values:\
\
(1==1)=1, (1==1)=1, (1==1)=1, (1==1)=1\
(-2==-2)=1, (-2==-2)=1, (-2==-2)=1, (-2==-2)=1\
\
Passed.\
\
Integer arithmetic:\
\
2+2=4, -2+-3=-5, 3+-4=-1, -4+5=1, $7FFF+$7FFE=-3, $8000+$8000=0\
Globals 6+8=14, $7FFE+$7FFD=-5\
2-2=0, -2-3=-5, 3-4=-1, -4-(-5)=1, $7FFF-$7FFE=1, $8000-$8001=-1, $7FFF-$8001=-2\
Globals 6-8=-2, $7FFD-$7FFE=-1\
2*2=4, -2*-3=6, 3*-4=-12, -4*5=-20, $100*$100 (trunc)=0, 311*373 (trunc)=$C523\
Globals -6*-8=48, Globals -311*373=15069\
12/3=4, 11/2=5, -11/2=-5, 11/-2=-5, -11/-2=5, $7fff/2=$3FFF, $7fff/-2=$C001, -$7fff/2=$C001, -$7fff/-2=$3FFF, $8000/2=$C000, $8000/(-2)=$4000, $8000/1=$8000\
Globals -48/-8=6, 48/7=6, 48/-7=-6, -48/7=-6, -48/-7=6\
12%3=0, 13%5=3, -13%5=-3, 13%-5=3, -13%-5=-3, $7fff%11=9, -$7fff%11=-9, $7fff%-11=9, -$7fff%-11=-9, $8000%7=-1, $8000%-7=-1, $8000%2=0, $8000%-2=0, $8000%1=0\
Globals 49%8=1, 49%-8=1, -49%8=-1, -49%-8=-1\
\
Passed.\
\
Compound arithmetic expressions:\
\
(7+2)*-4=-36\
($7FFF+2)/16=-2047\
(-$7FFF+-2)/16=2047\
(-26103+-32647)/9=754\
(-$7FFF-2)/16=2047\
($7FFF\'962)/16=-2047\
(-26103-32647)/9=754\
($100*$100)/16+1=1\
(311*373)/16=-941\
(311*-373)/16=941\
(111*373)/16=-1508\
(111*-373)/16=1508\
\
Passed.\
\
Bitwise arithmetic:\
\
0&0=$00, $FFFF&0=$00, $FFFF&$FFFF=$FFFF, $013F&$F310=$0110, $F731&$137F=$1331, $35&56=$14\
0|0=$00, $FFFF|0=$FFFF, $FFFF|$FFFF=$FFFF, $3700|$0012=$3712, $35|56=$77\
!0=$FFFF, !1=$FFFE, !$F=$FFF0, !$7FFF=$8000, !$8000=$7FFF, !$FFFD=$02\
\
Passed.\
\
Bit shifts:\
\
$11u<<0=$11, $11u<<1=$22, $11u<<4=$0110, $11u<<10=$4400, $11u<<15=$8000, $11u<<16=$00 (Unspecified), -2u<<0=-2, -2u<<1=-4, -2u<<7=-256, -2u<<15=0\
1u<<0=$01, 1u<<1=$02, 1u<<2=$04, 1u<<3=$08, 1u<<4=$10, 1u<<5=$20, 1u<<6=$40, 1u<<7=$80, 1u<<8=$0100, 1u<<9=$0200, 1u<<10=$0400, 1u<<11=$0800, 1u<<12=$1000, 1u<<13=$2000, 1u<<14=$4000, 1u<<15=$8000, 1u<<16=$00 (Unspecified)\
$4001u>>-0=$4001, $4001u>>-1=$2000, $4001u>>-6=$0100, $4001u>>-11=$08, $4001u>>-15=$00, $4001u>>-16=$00 (Unspecified)\
$7FFFu>>-0=$7FFF, $7FFFu>>-1=$3FFF, $7FFFu>>-2=$1FFF, $7FFFu>>-6=$01FF, $7FFFu>>-12=$07, $7FFFu>>-15=$00, $7FFFu>>-16=$00 (Unspecified)\
-1u>>-0=$FFFF, -1u>>-1=$7FFF, -1u>>-2=$3FFF, -1u>>-6=$03FF, -1u>>-12=$0F, -1u>>-13=$07, -1u>>-15=$01, -1u>>-16=$00 (Unspecified), -1u>>-17=$00 (Unspecified)\
-1u>>-1=$7FFF, -1u>>-2=$3FFF, -1u>>-3=$1FFF, -1u>>-4=$0FFF, -1u>>-5=$07FF, -1u>>-6=$03FF, -1u>>-7=$01FF, -1u>>-8=$FF, -1u>>-9=$7F, -1u>>-10=$3F, -1u>>-11=$1F, -1u>>-12=$0F, -1u>>-13=$07, -1u>>-14=$03, -1u>>-15=$01, -1u>>-16=$00 (Unspecified)\
$11s<<0=$11, $11s<<1=$22, $11s<<4=$0110, $11s<<10=$4400, $11s<<15=$8000, $11s<<16=$00 (Unspecified), -2s<<0=-2, -2s<<1=-4, -2s<<7=-256, -2s<<15=0\
1s<<0=$01, 1s<<1=$02, 1s<<2=$04, 1s<<3=$08, 1s<<4=$10, 1s<<5=$20, 1s<<6=$40, 1s<<7=$80, 1s<<8=$0100, 1s<<9=$0200, 1s<<10=$0400, 1s<<11=$0800, 1s<<12=$1000, 1s<<13=$2000, 1s<<14=$4000, 1s<<15=$8000, 1s<<16=$00 (Unspecified)\
$4001s>>-0=$4001, $4001s>>-1=$2000, $4001s>>-6=$0100, $4001s>>-11=$08, $4001s>>-15=$00, $4001s>>-16=$00 (Unspecified)\
$7FFFs>>-0=$7FFF, $7FFFs>>-1=$3FFF, $7FFFs>>-2=$1FFF, $7FFFs>>-6=$01FF, $7FFFs>>-12=$07, $7FFFs>>-13=$03, $7FFFs>>-14=$01, $7FFFs>>-15=$00, $7FFFs>>-16=$00 (Unspecified)\
-1s>>-0=-1, -1s>>-1=-1, -1s>>-15=-1, -1s>>-16=$FFFF (Unspecified), -1s>>-17=$FFFF (Unspecified)\
-1000s>>-0=-1000, -1000s>>-1=-500, -1000s>>-2=-250, -1000s>>-4=-63, -1000s>>-6=-16, -1000s>>-9=-2, -1000s>>-15=-1, -1000s>>-16=$FFFF (Unspecified), -1000s>>-17=$FFFF (Unspecified)\
-1s>>0=-1, -1s>>-1=-1, -1s>>-2=-1, -1s>>-3=-1, -1s>>-4=-1, -1s>>-5=-1, -1s>>-6=-1, -1s>>-7=-1, -1s>>-8=-1, -1s>>-9=-1, -1s>>-10=-1, -1s>>-11=-1, -1s>>-12=-1, -1s>>-13=-1, -1s>>-14=-1, -1s>>-15=-1, -1s>>-16=$FFFF (Unspecified)\
\
Passed.\
\
Increment/decrement:\
\
0++=1, 1++=2, -1++=0, -10++=-9, $7FFF++=$8000, $C000++=$C001\
0++=1, 1++=2, -1++=0, -10++=-9, $7FFF++=$8000, $C000++=$C001\
0++=1, 1++=2, -1++=0, -10++=-9, $7FFF++=$8000, $C000++=$C001\
0\'96=-1, 1\'96=0, -1\'96=-2, 10\'96=9, $8000\'96=$7FFF, $C000\'96=$BFFF\
0\'96=-1, 1\'96=0, -1\'96=-2, 10\'96=9, $8000\'96=$7FFF, $C000\'96=$BFFF\
0\'96=-1, 1\'96=0, -1\'96=-2, 10\'96=9, $8000\'96=$7FFF, $C000\'96=$BFFF\
\
Passed.\
\
Increment/decrement and branch:\
\
++0=1,1, ++1=2,1, ++-1=0,0, ++100=101,1, ++-10=-9,0, ++$7FFF=$8000,0, ++$C000=$C001,0\
++0=1,1, ++1=2,1, ++-1=0,0, ++100=101,1, ++-10=-9,0, ++$7FFF=$8000,0, ++$C000=$C001,0\
++0=1,1, ++1=2,1, ++-1=0,0, ++100=101,1, ++-10=-9,0, ++$7FFF=$8000,0, ++$C000=$C001,0\
\'960=-1,1, \'961=0,0, \'971=-2,1, \'96100=99,0, \'9710=-11,1, \'96$8000=$7FFF,0, \'96$C000=$BFFF,1\
\'960=-1,1, \'961=0,0, \'971=-2,1, \'96100=99,0, \'9710=-11,1, \'96$8000=$7FFF,0, \'96$C000=$BFFF,1\
\'960=-1,1, \'961=0,0, \'971=-2,1, \'96100=99,0, \'9710=-11,1, \'96$8000=$7FFF,0, \'96$C000=$BFFF,1\
++50=51,0, ++70=71,1, ++-50=-49,1, ++-70=-69,0, ++-50=-49,0, ++50=51,1\
\'9650=49,1, \'9670=69,0, \'9750=-51,0, \'9770=-71,1, \'9750=-51,1, \'9650=49,0\
\
Passed.\
\
Array loads and stores:\
\
a\'96>0=$1357, a\'96>0=$1357, a\'96>1=$FDB9, a\'96>1=$FDB9, a\'96>2=$11, a\'96>2=$11, a\'96>3=$FFEE, a\'96>3=$FFEE\
a+3\'96>-1=$57FD, a+3\'96>0=$B900, a+3\'96>1=$11FF, a+3\'96>-1=$57FD, a+3\'96>0=$B900, a+3\'96>1=$11FF\
a->0=$13, a->0=$13, a->1=$57, a->1=$57, a->2=$FD, a->2=$FD, a->3=$B9, a->3=$B9\
a+3->-1=$FD, a+3->0=$B9, a+3->1=$00, a+3->-1=$FD, a+3->0=$B9, a+3->1=$00\
a\'96>0=$1201, a\'96>0=$2302, a\'96>1=$3403, a\'96>1=$4504, a\'96>2=$5605, a\'96>2=$6706, a\'96>3=$7807, a\'96>3=$8908\
a\'96>-1=$AB0A, a\'96>0=$BC0B, a\'96>1=$CD0C, a\'96>-1=$BA1B, a\'96>0=$CB1C, a\'96>1=$DC1D\
a->0=$12, a->0=$23, a->1=$34, a->1=$45, a->2=$56, a->2=$67, a->3=$78, a->3=$89\
a->-1=$AB, a->0=$BC, a->1=$CD, a->-1=$BA, a->0=$CB, a->1=$DC\
$F1 concat $E2 = $F1E2\
$9876 = $98 concat $76\
\
Passed.\
\
Undo:\
\
Interpreter claims to support undo.\
\
Using a local variable for @save_undo result:\
Undo saved...\
Restoring undo...\
Undo succeeded, return value 2.\
loc=99 glob=999\
Using a global variable for @save_undo result:\
Undo saved...\
Restoring undo...\
Undo succeeded, return value 2.\
loc=98 glob=998\
Calling @save_undo within a function or two:\
Undo saved...\
Restoring undo...\
Undo succeeded, return value 2.\
loc=97 glob=997\
Using the stack for @save_undo result:\
Undo saved...\
Restoring undo...\
Undo succeeded, return value 2.\
loc=98 glob=998\
Checking @save_undo saves the stack correctly:\
Undo saved...\
guard=9\
Restoring undo...\
Undo succeeded, return value 2.\
loc=99 glob=999 glob2=-999\
guard=9\
\
Passed.\
\
Multi-level undo:\
(Note: this capability is not required by the spec.)\
\
Interpreter claims to support undo.\
\
Undo 1 saved...\
Undo 2 saved...\
Restoring undo 2...\
Undo 2 succeeded, return value 2.\
loc=77 glob=777\
Restoring undo 1...\
Undo 1 succeeded, return value 2.\
loc=99 glob=999\
\
Passed.\
\
Indirect opcodes:\
\
load sp -> result: 45, 45, 44\
load [spointer] -> result: 45, 45, 44\
load [sp=lpointer] -> result: 51, 45, 44\
load [sp=spointer] -> result: 45, 45, 44\
load sp -> sp: 45, 45\
load [sp=lpointer] -> sp: 51, 45\
load [sp=spointer] -> sp: 45, 45\
store sp 83: 83, 44\
store [spointer] 83: 83, 44\
store [sp=spointer] 83: 83, 44\
store [rpointer] 83: 83, 45, 44\
store [sp=rpointer] 83: 83, 45, 44\
store result sp: 45, 44, 43\
store sp sp: 45, 43\
store [sp=spointer] sp: 45, 43\
store [rpointer] sp: 45, 44, 43\
store [sp=rpointer] sp: 45, 44, 43\
pull result: 45, 44, 43\
pull [rpointer]: 45, 44, 43\
pull [sp=rpointer]: 45, 44, 43\
pull sp: 45, 43\
pull [sp=spointer]: 45, 43\
pull [spointer]: 45, 43\
inc result: 72, 45, 44\
inc [rpointer]: 72, 45, 44\
inc [sp=rpointer]: 72, 45, 44\
inc sp: 46, 44\
inc [spointer]: 46, 44\
inc [sp=spointer]: 46, 44\
dec result: 70, 45, 44\
dec [rpointer]: 70, 45, 44\
dec [sp=rpointer]: 70, 45, 44\
dec sp: 44, 44\
dec [spointer]: 44, 44\
dec [sp=spointer]: 44, 44\
inc_chk result: 72, 45, 44\
inc_chk [rpointer]: 72, 45, 44\
inc_chk [sp=rpointer]: 72, 45, 44\
inc_chk sp: 46, 44\
inc_chk [spointer]: 46, 44\
inc_chk [sp=spointer]: 46, 44\
dec_chk result: 70, 45, 44\
dec_chk [rpointer]: 70, 45, 44\
dec_chk [sp=rpointer]: 70, 45, 44\
dec_chk sp: 44, 44\
dec_chk [spointer]: 44, 44\
dec_chk [sp=spointer]: 44, 44\
\
Passed.\
\
Memory stream round-trip:\
\
Number of characters written: 166\
Number of characters read: 166\
\
Passed.\
\
Memory stream opcodes:\
\
@print_paddr: 3 characters written: 97 98 99\
@print_num: 3 characters written: 55 56 57\
@print_char: 1 characters written: 120 56 57\
\
Passed.\
\
@throw/@catch:\
\
Throwfunc1\
Throwfunc2\
Throwfunc3\
Throwfunc4\
Throwfunc5\
About to @throw - should then return from Throwfunc1\
Returning from Throwfunc1\
\
The function with @catch will be returned with the value of @throw: 1\
Intermediate functions should not set their storers.\
testglobal=0\
testglobal2=0\
\
Passed.\
\
*_table tests:\
\
@print_table - should print the alphabet in upper then lower case:\
ABCDEFGHIJKLMNOPQRSTUVWXYZ\
abcdefghijklmnopqrstuvwxyz\
\
@scan_table:\
Default form, first word: 3001\
Default form, another word: 3129\
Manually specified default form: 3129\
Default form, nonexistent word: 0\
Byte form, first byte: 3001\
Byte form, another byte: 3129\
Byte form, nonexistent byte: 0\
Longer form, first word: 3001\
Longer form, another word: 3129\
Longer form, a word which will be skipped: 0\
Longer byte form, first byte: 3001\
Longer byte form, another byte: 3129\
Longer byte form, a byte which will be skipped: 0\
Default form, word after length of table: 0\
Longer form, word after length of table: 0\
\
@copy_table:\
Copying forward, non-overlapping.\
Copying backwards, non-overlapping.\
Copying forward, overlapping, non-corrupting.\
Copying backward, overlapping, non-corrupting.\
Copying forward, overlapping, corrupting.\
Using @copy_table to zero out an array.\
Checking final table (failures are not counted twice).\
\
Passed.\
\
Z-Machine 1.1 Updates/Clarifications:\
\
Operand evalution: 4-2=2\
Indirect variable references:\
@dec: guard=9\
@dec_chk: guard=9\
@inc: guard=9\
@inc_chk: guard=9\
@load: guard=9\
@pull: guard=9\
@store: guard=9\
@je operands: 3: 1, 4: 1\
@get_prop_len 0: 0\
\
Passed.\
\
Z-Machine 1.1 tests:\
\
Ok, interpreter is version 1.1.\
\
Checking @set_true_colour by printing a pretty rainbow (ultimate prettiness of rainbow depends on the observer\'92s tastes):\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\slleading20\pardirnatural\partightenfactor0

\f2 \cb4 \'a0\cb5 \'a0\cb6 \'a0\cb7 \'a0\cb8 \'a0\cb9 \'a0\cb10 \'a0\cb11 \'a0\cb12 \'a0\cb13 \'a0\cb14 \'a0\cb15 \'a0\cb16 \'a0\cb17 \'a0\cb18 \'a0\cb19 \'a0\cb20 \'a0\cb21 \'a0\cb22 \'a0\cb23 \'a0\cb24 \'a0\cb25 \'a0\cb26 \'a0\cb27 \'a0\cb28 \'a0\cb29 \'a0\cb30 \'a0\cb31 \'a0\cb32 \'a0\cb33 \'a0\cb34 \'a0\cb35 \'a0\cb36 \'a0\cb37 \'a0\cb38 \'a0\cb39 \'a0\cb40 \'a0\cb41 \'a0\cb42 \'a0\cb43 \'a0\cb44 \'a0\cb45 \'a0\cb46 \'a0\cb47 \'a0\cb48 \'a0\cb49 \'a0\cb50 \'a0\cb51 \'a0\cb52 \'a0\cb53 \'a0\cb54 \'a0\cb55 \'a0\cb56 \'a0\cb57 \'a0\cb58 \'a0\cb59 \'a0\cb60 \'a0\cb61 \'a0\cb62 \'a0\cb63 \'a0\cb64 \'a0\cb65 \'a0\cb66 \'a0\cb67 \'a0\cb68 \'a0\cb69 \'a0\cb70 \'a0\cb71 \'a0\cb72 \'a0\cb73 \'a0\cb74 \'a0\cb75 \'a0\cb76 \'a0\cb77 \'a0\cb78 \'a0\cb79 \'a0\cb80 \'a0\cb81 \'a0\cb82 \'a0\cb83 \'a0
\f0 \cb3 \
\
Checking if the basic colour set uses the recommended true colours:\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\slleading20\pardirnatural\partightenfactor0

\f2 Recommended: \cb84 \'a0\cb85 \'a0\cb86 \'a0\cb87 \'a0\cb88 \'a0\cb89 \'a0\cb90 \'a0\cb91 \'a0\cb92 \'a0\cb93 \'a0\cb94 \'a0\cb3 \
Interpreter: \cb84 \'a0\cb85 \'a0\cb86 \'a0\cb87 \'a0\cb88 \'a0\cb89 \'a0\cb90 \'a0\cb91 \'a0\cb92 \'a0\cb93 \'a0\cb94 \'a0
\f0 \cb3 \
\
Z-Machine 1.2 (@gestalt):\
\
Stopping, interpreter is only version 1.1.\
\
All tests passed.\
\
>}